/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/.pnpm/next@14.0.0_@babel+core@7.28.4_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[12].oneOf[12].use[2]!./node_modules/.pnpm/next@14.0.0_@babel+core@7.28.4_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[12].oneOf[12].use[3]!./app/globals.css ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
.pointer-events-none {
  pointer-events: none;
}
.visible {
  visibility: visible;
}
.fixed {
  position: fixed;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.container {
  width: 100%;
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.inline {
  display: inline;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.min-h-screen {
  min-height: 100vh;
}
.w-full {
  width: 100%;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.opacity-50 {
  opacity: 50%;
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.focus-visible\:ring-2 {
  &:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus-visible\:outline-none {
  &:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.disabled\:pointer-events-none {
  &:disabled {
    pointer-events: none;
  }
}
.disabled\:opacity-50 {
  &:disabled {
    opacity: 50%;
  }
}
:root {
  --color-alabaster: #fcfff8;
  --color-pebble: #d5d0c8;
  --color-driftwood: #b8ad9d;
  --color-bark: #967f6c;
  --color-timber: #674e3c;
  --color-shadow: #241c17;
  --s-1: 4px;
  --s-2: 8px;
  --s-3: 12px;
  --s-4: 16px;
  --s-6: 24px;
  --r-xs: 4px;
  --r-sm: 6px;
  --r-md: 8px;
  --r-lg: 12px;
  --fs-sm: 14px;
  --fs-base: 15px;
  --container-max-width: 896px;
}
@layer components {
  .card {
    border-radius: var(--r-lg);
    padding: var(--s-6);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    background-color: var(--color-pebble);
    opacity: 0.9;
  }
  .scandi-input {
    width: 100%;
    border-radius: var(--r-sm);
    padding: var(--s-2) var(--s-3);
    border: 1px solid var(--color-pebble);
    background-color: var(--color-alabaster);
    outline: none;
    box-shadow: 0 0 0 3px rgba(103, 78, 60, 0.08);
    color: var(--color-shadow);
  }
  .pwa-toast {
    position: fixed;
    right: var(--s-4);
    bottom: var(--s-4);
    z-index: 9999;
    display: flex;
    gap: var(--s-3);
    align-items: center;
    padding: var(--s-2) var(--s-3);
    border-radius: var(--r-md);
    background-color: var(--color-shadow);
    color: var(--color-alabaster);
    box-shadow: 0 8px 30px rgba(36, 28, 23, 0.35);
    animation: pwa-toast-in 240ms ease-out forwards;
  }
  .pwa-toast.hide {
    animation: pwa-toast-out 200ms ease-in forwards;
  }
  .pwa-toast .pwa-message {
    font-size: var(--fs-sm);
  }
  .pwa-toast .pwa-actions {
    display: flex;
    gap: var(--s-2);
    align-items: center;
  }
  .pwa-btn {
    background: transparent;
    border: 1px solid rgba(252, 255, 248, 0.12);
    color: inherit;
    padding: calc(var(--s-1) + 2px) calc(var(--s-2) + 2px);
    border-radius: var(--r-sm);
    font-size: var(--fs-sm);
    cursor: pointer;
  }
  .pwa-btn.primary {
    background-color: var(--color-timber);
    border-color: transparent;
    color: var(--color-alabaster);
  }
  .action-btn.disabled,
    .action-btn[disabled],
    .action-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: var(--color-pebble);
    color: var(--color-driftwood);
    box-shadow: none;
  }
  @keyframes pwa-toast-in {
    from {
      opacity: 0;
      transform: translateY(8px) scale(0.98);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }
  @keyframes pwa-toast-out {
    from {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    to {
      opacity: 0;
      transform: translateY(8px) scale(0.98);
    }
  }
}
@layer utilities {
  .grid-cols-responsive {
    display: block;
  }
  @media (min-width: 768px) {
    .grid-cols-responsive {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: var(--s-4);
    }
  }
  .container-centered {
    width: 100%;
    max-width: var(--container-max-width);
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--s-4);
    padding-right: var(--s-4);
  }
  .card {
    max-width: 100%;
  }
  .card .field {
    padding: var(--s-1) 0;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: var(--s-2);
  }
  .card .field {
    width: 100%;
  }
  .card .field label {
    width: 100%;
    text-align: left;
    margin: 0;
    font-size: var(--fs-base);
    color: #000000;
    padding-top: var(--s-1);
  }
  .scandi-input,
    .card .field input,
    .card .field select {
    width: 100%;
    box-sizing: border-box;
  }
  .card .grid > div {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    padding: 0;
  }
  label {
    color: #000000;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-outline-style: solid;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}

